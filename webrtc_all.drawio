<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36" version="25.0.3">
  <diagram name="Page-1" id="3N-mVxJucpXbubM5xxd4">
    <mxGraphModel dx="594" dy="1612" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" target="FZKG37nxdmX5qeV5vjZZ-2">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="170" y="350" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-2" value="RtpPacketizer" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="110" y="230" width="120" height="50" as="geometry" />
        </mxCell>
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-8" value="&lt;table border=&quot;1&quot; width=&quot;100%&quot; height=&quot;100%&quot; cellpadding=&quot;4&quot; style=&quot;width:100%;height:100%;border-collapse:collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;AV1RtpPacketizer&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;span style=&quot;&quot;&gt;uint16_t maxFragmentSize;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;Packetization packetization;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;std::shared_ptr&amp;lt;binary&amp;gt; sequenceHeader;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AV1RtpPacketizer()&lt;br&gt;void outgoing(message_vector &amp;amp;messages, const message_callback &amp;amp;send)&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="text;html=1;whiteSpace=wrap;strokeColor=none;fillColor=none;overflow=fill;" vertex="1" parent="1">
          <mxGeometry x="40" y="350" width="280" height="180" as="geometry" />
        </mxCell>
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-9" value="&lt;table border=&quot;1&quot; width=&quot;100%&quot; height=&quot;100%&quot; cellpadding=&quot;4&quot; style=&quot;width:100%;height:100%;border-collapse:collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Candidate&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;string mFoundation;&lt;br&gt;uint32_t mComponent, mPriority;&lt;br&gt;string mTypeString, mTransportString;&lt;br&gt;Type mType;&lt;br&gt;TransportType mTransportType;&lt;br&gt;string mNode, mService;&lt;br&gt;string mTail;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Candidate();&lt;br&gt;Candidate(string candidate);&lt;br&gt;Candidate(string candidate, string mid);&lt;br&gt;void hintMid(string mid);&lt;br&gt;void changeAddress(string addr);&lt;br&gt;bool resolve(ResolveMode mode = ResolveMode::Simple);&lt;br&gt;Type type() const;&lt;br&gt;TransportType transportType() const;&lt;br&gt;uint32_t priority() const;&lt;br&gt;string candidate() const;&lt;br&gt;string mid() const;&lt;br&gt;operator string() const;&lt;br&gt;bool isResolved() const;&lt;br&gt;Family family() const;&lt;br&gt;optional&amp;lt;string&amp;gt; address() const;&lt;br&gt;optional&amp;lt;uint16_t&amp;gt; port() const;&lt;br&gt;void parse(string candidate);&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="text;html=1;whiteSpace=wrap;strokeColor=none;fillColor=none;overflow=fill;" vertex="1" parent="1">
          <mxGeometry x="60" y="730" width="420" height="410" as="geometry" />
        </mxCell>
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-13" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="FZKG37nxdmX5qeV5vjZZ-10" target="FZKG37nxdmX5qeV5vjZZ-12">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-10" value="&lt;table border=&quot;1&quot; width=&quot;100%&quot; height=&quot;100%&quot; cellpadding=&quot;4&quot; style=&quot;width:100%;height:100%;border-collapse:collapse;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th align=&quot;center&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;Channel&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;br&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;virtual void close() = 0;&lt;br&gt;virtual bool send(message_variant data) = 0; &lt;br&gt;virtual bool send(const byte *data, size_t size) = 0;&lt;br&gt;virtual bool isOpen() const = 0;&lt;br&gt;virtual bool isClosed() const = 0;&lt;br&gt;virtual size_t maxMessageSize() const; // max message size in a call to send&lt;br&gt;virtual size_t bufferedAmount() const; // total size buffered to send&lt;br&gt;void onOpen(std::function&amp;lt;void()&amp;gt; callback);&lt;br&gt;void onClosed(std::function&amp;lt;void()&amp;gt; callback);&lt;br&gt;void onError(std::function&amp;lt;void(string error)&amp;gt; callback);&lt;br&gt;void onMessage(std::function&amp;lt;void(message_variant data)&amp;gt; callback);&lt;br&gt;void onBufferedAmountLow(std::function&amp;lt;void()&amp;gt; callback);&lt;br&gt;void setBufferedAmountLowThreshold(size_t amount);&lt;br&gt;optional&amp;lt;message_variant&amp;gt; receive();&lt;br&gt;optional&amp;lt;message_variant&amp;gt; peek();&amp;nbsp; &amp;nbsp; // only if onMessage unset&lt;br&gt;size_t availableAmount() const;&amp;nbsp; &amp;nbsp; &amp;nbsp; // total size available to receive&lt;br&gt;void onAvailable(std::function&amp;lt;void()&amp;gt; callback);&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;" style="text;html=1;whiteSpace=wrap;strokeColor=none;fillColor=none;overflow=fill;" vertex="1" parent="1">
          <mxGeometry x="750" y="250" width="420" height="410" as="geometry" />
        </mxCell>
        <mxCell id="FZKG37nxdmX5qeV5vjZZ-12" value="impl::Channel" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="870" y="150" width="120" height="50" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
